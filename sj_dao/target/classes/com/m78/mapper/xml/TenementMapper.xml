<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.m78.mapper.TenementMapper">
    <resultMap id="BaseResultMap" type="com.m78.entity.Tenement">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="integrals" jdbcType="BIGINT" property="integrals"/>
        <result column="registrationDate" jdbcType="DATE" property="registrationdate"/>
        <result column="state" jdbcType="BIGINT" property="state"/>
        <result column="qqNumber" jdbcType="BIGINT" property="qqnumber"/>
        <result column="WxNumber" jdbcType="VARCHAR" property="wxnumber"/>
        <result column="urgencyMan" jdbcType="VARCHAR" property="urgencyman"/>
        <result column="urgencyManPhone" jdbcType="VARCHAR" property="urgencymanphone"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="nation" jdbcType="VARCHAR" property="nation"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="communityId" jdbcType="BIGINT" property="communityid"/>
        <result column="idCard" jdbcType="VARCHAR" property="idcard"/>
        <result column="birthday" jdbcType="DATE" property="birthday"/>
        <result column="ownerNumber" jdbcType="BIGINT" property="ownernumber"/>
        <association property="community" javaType="com.m78.entity.Community">
            <result column="communityName" property="name" jdbcType="VARCHAR"/>
        </association>
        <association property="dictionaryItem" javaType="com.m78.entity.DictionaryItem">
            <result column="content" property="content" jdbcType="VARCHAR"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, nickname,phone, integrals, registrationDate, state, qqNumber, WxNumber, urgencyMan,
    urgencyManPhone, sex, nation, remark, communityId, idCard, birthday, ownerNumber
  </sql>
    <sql id="Base_TenementView">
    tenementId,communityId,communityName,buildingId,buildingName,houseId,unitNumber,fool,tenementName,phone,relation
  </sql>
    <!--获取住户详情根据id-->
    <select id="getDetailTenementById" resultMap="BaseResultMap">
    SELECT t.name,t.nickname,t.`sex`,t.`phone`,t.`ownerNumber`,t.`integrals`,c.`name` AS communityName,t.`registrationDate`,t.`birthday`,t.`idCard`,t.`urgencyMan`,t.`urgencyManPhone`,t.`nation`,t.`qqNumber`,t.`WxNumber`,di.`content`,t.`remark` FROM tenement t
INNER JOIN community c        ON c.`id`=t.`communityId`
INNER JOIN dictionary_item di ON di.`id`=t.`state`
WHERE t.id=#{tenementId}
  </select>
    <!--获取所有住户-->
    <select id="getAllTenement" resultType="com.m78.vo.TenementVo">
        SELECT
        <include refid="Base_TenementView"/>
        from
        tenementView
        <if test="name!=''">
            where tenementName like concat('%',#{name},'%')
        </if>
        limit #{start},#{limit}
    </select>
    <!--查询住户总数-->
    <select id="getTenementCount" resultType="java.lang.Integer">
        select count(id)
        from tenement
        <if test="name!=''">
            where tenementName like concat('%',#{name},'%')
        </if>
    </select>

    <select id="getTenementByPrimaryKeyId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        tenement
        where id = #{id}
    </select>
    <!--查询小区下的所有手机号根据小区id-->
    <select id="getPhoneByCommunityId" resultMap="BaseResultMap">
    SELECT t.`phone` FROM tenement t
INNER JOIN community c ON c.`id`=t.`communityId`
WHERE c.`id`=#{communityId}
  </select>
    <!--住户住址详情-->
    <resultMap id="tenementDetailAddress" type="com.m78.entity.Tenement">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <association property="community" javaType="com.m78.entity.Community">
            <result column="communityid" property="id"/>
            <result column="communityname" jdbcType="VARCHAR" property="name"></result>
        </association>
    </resultMap>
    <!--根据住户姓名获取住户详细住址-->
    <select id="getDetailAddressByName" resultMap="tenementDetailAddress">
        SELECT c.`name` as communityname,c.id as communityid ,b.`name` as buildingname,b.id as buildingid ,h.houseId
        ,h.`unitNumber`,h.`fool`,t.`id`,t.`name` as tenementname FROM tenement t
        INNER JOIN house_tentment ht ON ht.`tentmentId`=t.`id`
        INNER JOIN house h ON h.`houseId`=ht.`houseId`
        INNER JOIN house_buliding hb ON h.`houseId`=hb.`houseId`
        INNER JOIN building b ON b.`id`=hb.`buildingId`
        INNER JOIN community c ON c.`id`=t.`communityId`
        WHERE 1=1
        <if test="tenementName!=''">
            and t.name LIKE CONCAT ('%',#{tenementName},'%')
        </if>
        limit #{start},#{limit}
    </select>
    <!--根据住户姓名查询住户总数-->
    <select id="getTenementCountByName" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM tenement t
        <if test="name!=''">
            WHERE t.`name` LIKE CONCAT ('%',#{name},'%')
        </if>
    </select>
    <!--根据住户手机号查询车位主键-->
    <select id="getCarportIdByTenementPhone" resultType="java.lang.Long">
    SELECT tc.`carportId` FROM tenement t
    INNER JOIN tenement_carport tc ON tc.`tentmentId`=t.`id`
    WHERE phone=#{phone}
  </select>
    <!--根据住户手机号查询房屋主键-->
    <select id="getHouseIdByTenementPhone" resultType="java.lang.Long">
    SELECT ht.`houseId` FROM tenement t
    INNER JOIN house_tentment ht ON t.`id`=ht.tentmentId
    WHERE phone=#{phone}
  </select>
    <!--查询住户根据小区-->
    <select id="getTenementByCommunity" resultType="com.m78.entity.Tenement">
         SELECT id,NAME FROM tenement WHERE communityId=#{communityId}
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tenement
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tenement
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.m78.entity.Tenement">
    insert into tenement (id, name, phone, 
      integrals, registrationDate, state, 
      qqNumber, WxNumber, urgencyMan, 
      urgencyManPhone, sex, nation, 
      remark, communityId, idCard, 
      birthday, ownerNumber)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{integrals,jdbcType=BIGINT}, #{registrationdate,jdbcType=DATE}, #{state,jdbcType=BIGINT}, 
      #{qqnumber,jdbcType=BIGINT}, #{wxnumber,jdbcType=VARCHAR}, #{urgencyman,jdbcType=VARCHAR}, 
      #{urgencymanphone,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{communityid,jdbcType=BIGINT}, #{idcard,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{ownernumber,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="com.m78.entity.Tenement">
        insert into tenement
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="integrals != null">
                integrals,
            </if>
            <if test="registrationdate != null">
                registrationDate,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="qqnumber != null">
                qqNumber,
            </if>
            <if test="wxnumber != null">
                WxNumber,
            </if>
            <if test="urgencyman != null">
                urgencyMan,
            </if>
            <if test="urgencymanphone != null">
                urgencyManPhone,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="nation != null">
                nation,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="communityid != null">
                communityId,
            </if>
            <if test="idcard != null">
                idCard,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="ownernumber != null">
                ownerNumber,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="integrals != null">
                #{integrals,jdbcType=BIGINT},
            </if>
            <if test="registrationdate != null">
                #{registrationdate,jdbcType=DATE},
            </if>
            <if test="state != null">
                #{state,jdbcType=BIGINT},
            </if>
            <if test="qqnumber != null">
                #{qqnumber,jdbcType=BIGINT},
            </if>
            <if test="wxnumber != null">
                #{wxnumber,jdbcType=VARCHAR},
            </if>
            <if test="urgencyman != null">
                #{urgencyman,jdbcType=VARCHAR},
            </if>
            <if test="urgencymanphone != null">
                #{urgencymanphone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                #{nation,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="communityid != null">
                #{communityid,jdbcType=BIGINT},
            </if>
            <if test="idcard != null">
                #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="ownernumber != null">
                #{ownernumber,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.m78.entity.Tenement">
        update tenement
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="integrals != null">
                integrals = #{integrals,jdbcType=BIGINT},
            </if>
            <if test="registrationdate != null">
                registrationDate = #{registrationdate,jdbcType=DATE},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=BIGINT},
            </if>
            <if test="qqnumber != null">
                qqNumber = #{qqnumber,jdbcType=BIGINT},
            </if>
            <if test="wxnumber != null">
                WxNumber = #{wxnumber,jdbcType=VARCHAR},
            </if>
            <if test="urgencyman != null">
                urgencyMan = #{urgencyman,jdbcType=VARCHAR},
            </if>
            <if test="urgencymanphone != null">
                urgencyManPhone = #{urgencymanphone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                nation = #{nation,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="communityid != null">
                communityId = #{communityid,jdbcType=BIGINT},
            </if>
            <if test="idcard != null">
                idCard = #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="ownernumber != null">
                ownerNumber = #{ownernumber,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.m78.entity.Tenement">
    update tenement
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      integrals = #{integrals,jdbcType=BIGINT},
      registrationDate = #{registrationdate,jdbcType=DATE},
      state = #{state,jdbcType=BIGINT},
      qqNumber = #{qqnumber,jdbcType=BIGINT},
      WxNumber = #{wxnumber,jdbcType=VARCHAR},
      urgencyMan = #{urgencyman,jdbcType=VARCHAR},
      urgencyManPhone = #{urgencymanphone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      communityId = #{communityid,jdbcType=BIGINT},
      idCard = #{idcard,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      ownerNumber = #{ownernumber,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <!-- 查询住户相关房屋信息-->
    <select id="getDetailHouseByTenementId" resultType="com.m78.vo.TenementVo">
          SELECT t.id,h.fool,c.name AS communityName,b.name AS buildingName,di.content AS houseType,id.content AS relation,h.returnTime FROM tenement t
 INNER JOIN `house_tentment` ht ON ht.`tentmentId`=t.`id`
 INNER JOIN `house` h 		ON ht.`houseId`=h.`houseId`
 INNER JOIN `house_buliding` hb ON hb.`houseId`=h.`houseId`
 INNER JOIN `building` b 	ON b.id=hb.`buildingId`
 INNER JOIN community c 	ON c.id=t.communityId
 INNER JOIN dictionary_item di ON di.id=h.`houseType`
  INNER JOIN dictionary_item id ON id.id=t.state
         WHERE t.id=#{tenementId}
    </select>
    <!-- 查询住户相关车位信息-->
    <select id="getDetailCarportByTenementId" resultType="com.m78.vo.TenementVo">
      SELECT t.id,t.name AS tenementName,car.`carNumber`,c.name AS communityName,t.phone,cp.`carportNo`, di.content AS carportType FROM     tenement t
      INNER JOIN `tenement_car` tc 		ON tc.`tenementId`=t.id
      INNER JOIN car			        ON car.carId=tc.carId
      INNER JOIN community c 	        ON c.id=t.communityId
      INNER JOIN car_carport cc	        ON cc.`carId`=car.carId
      INNER JOIN carport  cp	        ON cp.`carportNo`=cc.`carportId`
      INNER JOIN dictionary_item di    ON di.id=cp.`carportType`
     WHERE t.id=#{tenementId}
    </select>
    <!--查询住户相关车辆信息-->
    <select id="getDetailCarByTenementId" resultType="com.m78.vo.TenementVo">
     SELECT t.id,t.name AS tenementName,c.name AS communityName,t.phone,cp.carportNo,car.`carNumber` FROM tenement t
        INNER JOIN community c 	        ON c.id=t.communityId
        INNER JOIN `tenement_carport` tc	ON tc.`tentmentId`=t.id
        INNER JOIN `carport` cp            ON cp.carportNo=tc.`carportId`
        INNER JOIN car 	                    ON car.`carId`=cp.carportNo
    WHERE t.id=#{tenementId}
    </select>
    <!-- 查询相关住户信息-->
    <select id="getDetailRelationByTenementId" resultType="com.m78.vo.TenementVo">
      SELECT t.id,t.name AS tenementName,c.name AS communityName,b.name AS buildingName,CONCAT(LEFT(fool,1),'单元') AS unitNumber,h.fool,t.phone,di       .content AS relation FROM  house_tentment ht
     INNER JOIN tenement t ON ht.`tentmentId`=t.id
     INNER JOIN community c 	ON c.id=t.communityId
     INNER JOIN `house` h 		ON ht.`houseId`=h.`houseId`
     INNER JOIN `house_buliding` hb ON hb.`houseId`=h.`houseId`
     INNER JOIN `building` b 	ON b.id=hb.`buildingId`
     INNER JOIN dictionary_item di ON di.id=t.state
     WHERE t.id IN (
     SELECT ht.`tentmentId` FROM house_tentment ht WHERE `houseId`=
    (SELECT ht.houseId FROM house_tentment ht WHERE `tentmentId`=#{tenementId}))
    </select>
</mapper>