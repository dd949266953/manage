<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.m78.mapper.DictionaryItemMapper">
    <resultMap id="BaseResultMap" type="com.m78.entity.DictionaryItem">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="type_id" property="typeId" jdbcType="BIGINT"/>
        <association property="dicionaryType" javaType="com.m78.entity.DicionaryType">
            <id column="id" property="id" jdbcType="BIGINT"/>
            <result column="description" property="description" jdbcType="VARCHAR"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
    id, content, type_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from dictionary_item
        where id = #{id,jdbcType=BIGINT}
    </select>
    <!--查询楼宇类型-->
    <select id="getBuildingType" resultMap="BaseResultMap">
    SELECT di.`id`,di.`content` FROM dictionary_item di
    INNER JOIN dicionary_type dt ON di.`type_id`=dt.`id`
    WHERE dt.`id`=1
  </select>
    <!--查询住户身份-->
    <select id="getRelation" resultMap="BaseResultMap">
         SELECT di.id,di.content FROM dictionary_item di
         INNER JOIN dicionary_type dt ON di.type_id=dt.id
         WHERE dt.id=13
    </select>
    <!--查询房屋类型-->
    <select id="getHouseType" resultMap="BaseResultMap">
    SELECT di.id,content FROM dictionary_item di
    INNER JOIN dicionary_type dt ON dt.id=di.`type_id`
    WHERE dt.id=10
  </select>
    <!--查询车房屋状态-->
    <select id="getHouseState" resultMap="BaseResultMap">
    SELECT di.id,content FROM dictionary_item di
    INNER JOIN dicionary_type dt ON dt.id=di.`type_id`
    WHERE dt.id=3
    </select>
    <!--查询车位类型-->
    <select id="getCarportType" resultMap="BaseResultMap">
        SELECT di.id,di.content FROM dictionary_item di
INNER JOIN dicionary_type dt ON dt.id=di.type_id
WHERE dt.id=2

    </select>
    <!--查询职业类型-->
    <select id="getDictionaryItem" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from dictionary_item WHERE type_id= 12
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dictionary_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.m78.entity.DictionaryItem">
    insert into dictionary_item (id, content, type_id
      )
    values (#{id,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{typeId,jdbcType=BIGINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.m78.entity.DictionaryItem">
        insert into dictionary_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.m78.entity.DictionaryItem">
        update dictionary_item
        <set>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.m78.entity.DictionaryItem">
    update dictionary_item
    set content = #{content,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>