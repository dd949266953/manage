<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.m78.mapper.VoteMapper" >
  <resultMap id="BaseResultMap" type="com.m78.entity.Vote" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIGINT" />
    <result column="startTime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="stopTime" property="stoptime" jdbcType="TIMESTAMP" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, cover, content, state, startTime, stopTime, time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from vote
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from vote
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.m78.entity.Vote" >
    insert into vote (id, title, cover, 
      content, state, startTime, 
      stopTime, time)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{state,jdbcType=BIGINT}, #{starttime,jdbcType=TIMESTAMP}, 
      #{stoptime,jdbcType=TIMESTAMP}, #{time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.m78.entity.Vote" >
    insert into vote
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="starttime != null" >
        startTime,
      </if>
      <if test="stoptime != null" >
        stopTime,
      </if>
      <if test="time != null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIGINT},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="stoptime != null" >
        #{stoptime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.m78.entity.Vote" >
    update vote
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIGINT},
      </if>
      <if test="starttime != null" >
        startTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="stoptime != null" >
        stopTime = #{stoptime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.m78.entity.Vote" >
    update vote
    set title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIGINT},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      stopTime = #{stoptime,jdbcType=TIMESTAMP},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>