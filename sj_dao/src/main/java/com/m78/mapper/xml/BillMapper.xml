<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.m78.mapper.BillMapper">
  <resultMap id="BaseResultMap" type="com.m78.entity.Bill">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="state" jdbcType="BIGINT" property="state" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="chargeUser" jdbcType="BIGINT" property="chargeuser" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="informs" jdbcType="BIGINT" property="informs" />
    <result column="startTime" jdbcType="DATE" property="starttime" />
    <result column="overTime" jdbcType="DATE" property="overtime" />
    <result column="consume" jdbcType="DOUBLE" property="consume" />
    <result column="moneys" jdbcType="DOUBLE" property="moneys" />
    <result column="communityId" jdbcType="BIGINT" property="communityid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, state, remark, chargeUser, time, informs, startTime, overTime, consume, moneys, 
    communityId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bill
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bill
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.m78.entity.Bill">
    insert into bill (id, state, remark, 
      chargeUser, time, informs, 
      startTime, overTime, consume, 
      moneys, communityId)
    values (#{id,jdbcType=BIGINT}, #{state,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{chargeuser,jdbcType=BIGINT}, #{time,jdbcType=TIMESTAMP}, #{informs,jdbcType=BIGINT}, 
      #{starttime,jdbcType=DATE}, #{overtime,jdbcType=DATE}, #{consume,jdbcType=DOUBLE}, 
      #{moneys,jdbcType=DOUBLE}, #{communityid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.m78.entity.Bill">
    insert into bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="chargeuser != null">
        chargeUser,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="informs != null">
        informs,
      </if>
      <if test="starttime != null">
        startTime,
      </if>
      <if test="overtime != null">
        overTime,
      </if>
      <if test="consume != null">
        consume,
      </if>
      <if test="moneys != null">
        moneys,
      </if>
      <if test="communityid != null">
        communityId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="chargeuser != null">
        #{chargeuser,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="informs != null">
        #{informs,jdbcType=BIGINT},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=DATE},
      </if>
      <if test="overtime != null">
        #{overtime,jdbcType=DATE},
      </if>
      <if test="consume != null">
        #{consume,jdbcType=DOUBLE},
      </if>
      <if test="moneys != null">
        #{moneys,jdbcType=DOUBLE},
      </if>
      <if test="communityid != null">
        #{communityid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.m78.entity.Bill">
    update bill
    <set>
      <if test="state != null">
        state = #{state,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="chargeuser != null">
        chargeUser = #{chargeuser,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="informs != null">
        informs = #{informs,jdbcType=BIGINT},
      </if>
      <if test="starttime != null">
        startTime = #{starttime,jdbcType=DATE},
      </if>
      <if test="overtime != null">
        overTime = #{overtime,jdbcType=DATE},
      </if>
      <if test="consume != null">
        consume = #{consume,jdbcType=DOUBLE},
      </if>
      <if test="moneys != null">
        moneys = #{moneys,jdbcType=DOUBLE},
      </if>
      <if test="communityid != null">
        communityId = #{communityid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.m78.entity.Bill">
    update bill
    set state = #{state,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      chargeUser = #{chargeuser,jdbcType=BIGINT},
      time = #{time,jdbcType=TIMESTAMP},
      informs = #{informs,jdbcType=BIGINT},
      startTime = #{starttime,jdbcType=DATE},
      overTime = #{overtime,jdbcType=DATE},
      consume = #{consume,jdbcType=DOUBLE},
      moneys = #{moneys,jdbcType=DOUBLE},
      communityId = #{communityid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <resultMap id="yesBillList" type="com.m78.entity.Bill">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="type" jdbcType="BIGINT" property="type" />
        <result  column="signId" jdbcType="BIGINT" property="signId"/>
        <result column="charName" jdbcType="VARCHAR" property="charName"/>
        <result column="tentmentName" jdbcType="VARCHAR" property="tentmentName"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="time" jdbcType="DATE"  property="time" />
        <result column="startTime" jdbcType="DATE" property="starttime" />
        <result column="overTime" jdbcType="DATE" property="overtime" />
        <result column="moneys" jdbcType="DOUBLE" property="moneys" />
        <association property="admin"  javaType="com.m78.entity.Admin">
            <result property="id" column="adminid" />
            <result property="name" column="adminName" />
        </association>
        <association property="community" javaType="com.m78.entity.Community">
            <result property="id" column="id1"/>
            <result property="name" column="communityName"/>
        </association>

    </resultMap>
    <resultMap id="noBillList" type="com.m78.entity.Bill">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="type" jdbcType="BIGINT" property="type" />
        <result  column="signId" jdbcType="BIGINT" property="signId"/>
        <result column="charName" jdbcType="VARCHAR" property="charName"/>
        <result column="tentmentName" jdbcType="VARCHAR" property="tentmentName"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="price" jdbcType="DOUBLE"  property="price" />
        <result column="startTime" jdbcType="DATE" property="starttime" />
        <result column="overTime" jdbcType="DATE" property="overtime" />
        <result column="consume" jdbcType="DOUBLE" property="consume" />
        <result column="moneys" jdbcType="DOUBLE" property="moneys" />
        <association property="community" javaType="com.m78.entity.Community">
            <result property="id" column="id1"/>
            <result property="name" column="communityName"/>
        </association>
    </resultMap>
    <select id="getAllNoBill" resultMap="noBillList">
        SELECT bi.*,cn.`name` as charName,cid.type,comm.id as id1,comm.`name` as communityName,cid.signId,cna.`name`,cit.price,te.`name` AS tentmentName,te.phone AS phone FROM bill bi
        left JOIN charge_id cid ON bi.id=cid.billId
        left JOIN chargename cn on cn.id=cid.type
        INNER JOIN community comm ON comm.id=bi.communityId
        left JOIN chargeitem cit ON cit.id=cid.chargeitemId
        left JOIN chargename cna ON cna.id=cit.type
        left JOIN house_tentment ht ON ht.houseId=cid.signId
        left JOIN tentment_carport tca ON tca.carportId=cid.signId
        left JOIN tenement te ON te.id=ht.tentmentId OR te.id=tca.tentmentId
        WHERE bi.state=27
        <if test="name!=''">
        AND comm.`name` LIKE CONCAT ('%',#{name},'%')  OR  cpo.carportNo LIKE CONCAT ('%',#{name},'%') OR  hou.houseId LIKE CONCAT ('%',#{name},'%')
        </if>
        <if test="pageSize!=-1">
        limit #{page},#{pageSize}
        </if>
     </select>
     <select id="getAllNoBillCount" resultType="java.lang.Long">
     select  count(1) from  bill where state=27
    </select>
    <select id="getAllYseBillCount" resultType="java.lang.Long">
     select  count(1) from  bill where state=28
    </select>
    <update id="updateBillById" parameterType="java.lang.Long">
        update bill set state=28,chargeUser=1,time=now() where id=#{billID}
    </update>
    <select id="getAllYseBills" resultMap="yesBillList">
        SELECT bi.*,cn.`name` as charName,cid.type,comm.id as id1,comm.`name` as communityName,cid.signId,cna.`name` as charName,te.`name` as  tentmentName,te.phone,cit.price,ad.id AS adminid,ad.name as adminName FROM bill bi
        left JOIN charge_id cid ON bi.id=cid.billId
        left JOIN chargename cn on cn.id=cid.type
        INNER JOIN admin ad ON ad.id=bi.chargeUser
        INNER JOIN community comm ON comm.id=bi.communityId
        left JOIN chargeitem cit ON cit.id=cid.chargeitemId
        left JOIN chargename cna ON cna.id=cit.type
        left JOIN house_tentment ht ON ht.houseId=cid.signId
        LEFT JOIN house hou on hou.houseId=ht.houseId AND cid.type=1
        left JOIN tentment_carport tca ON tca.carportId=cid.signId
        LEFT JOIN carport cpo on cpo.carportNo=tca.carportId AND cid.type=2
        left JOIN tenement te ON te.id=ht.tentmentId OR te.id=tca.tentmentId
        WHERE bi.state=28
        <if test="name!=''">
            AND comm.`name` LIKE CONCAT ('%',#{name},'%')  OR  cpo.carportNo LIKE CONCAT ('%',#{name},'%') OR  hou.houseId LIKE CONCAT ('%',#{name},'%')
        </if>
        <if test="pageSize!=-1">
            limit #{page},#{pageSize}
        </if>
    </select>
    <resultMap id="sendList" type="com.m78.entity.ChargeId">
        <result column="tentmentId" property="tentmentId"/>
        <result column="communityName" property="communityName"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="name1" jdbcType="VARCHAR" property="communityName"/>
        <result column="moneys" jdbcType="DOUBLE" property="moneys" />
    </resultMap>
    <select id="getAllSend" resultMap="sendList">
        SELECT te.name ,te.phone,comm.`name` as communityName, SUM(bi.moneys) AS moneys FROM charge_id ca
        INNER JOIN bill bi ON bi.id=ca.billId
        left JOIN house_tentment ht ON ht.houseId=ca.signId AND ca.type=1
        left JOIN tentment_carport tca ON tca.carportId=ca.type AND ca.type=2
        left JOIN tenement te ON te.id=ht.tentmentId OR te.id=tca.tentmentId
        INNER JOIN community comm ON comm.id=te.communityId
        WHERE bi.state=27
        <if test="name!=''">
            and   te.`name` LIKE  CONCAT ('%',#{name},'%')
        </if>
        GROUP BY te.id
        <if test="pageSize!=-1">
            limit #{page},#{pageSize}
        </if>
    </select>
    <select id="getAllSendCount" resultType="java.lang.Long">
        select  count(1) from  send
    </select>
</mapper>